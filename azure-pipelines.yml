# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
variables:
  liststr: $(strlist)

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "$liststr"
      echo $liststr
      echo $(liststr)
      echo $(LISTSTR)
      echo $(STRLIST)
      echo $[LISTSTR]
      echo $[STRLIST]
      IFS=', ' read -r -a array <<< "$(STRLIST)"
      echo "${array[0]}"
      asarray=(`echo $(liststr) | tr ',' ' '`)
      echo "${asarray[0]}"
      echo "##vso[task.setvariable variable=list_of_values]$asarray"
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'


- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    echo "Hello $(list_of_values)"
    echo "Hello $(list_of_values[0])"
    echo "Hello ${$(list_of_values)[0]}"
    echo "Hello ${(list_of_values)[0]}"
    echo "Hello $list_of_values"
    echo "Hello ${list_of_values}"
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
    echo "Hello $env:list_of_values[1]"
  displayName: 'pytest'
